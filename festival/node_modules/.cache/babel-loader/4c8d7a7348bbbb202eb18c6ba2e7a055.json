{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\memory\\\\src\\\\Type_rap_prgm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Type_rap_prgm = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [typeOfRap, setTypeOfRap] = useState();\n  const [filterData, setFilterData] = useState([]);\n  const [autreFilter, setAutreFilter] = useState();\n  const [autreFilter1, setAutreFilter1] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\"/memory_admin/controller/programme/programme_api.php\");\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (typeOfRap && autreFilter && !autreFilter1) {\n      const filterTypeRap = data.filter(musique => musique.type_rap === typeOfRap && musique.nom_scene === autreFilter);\n      setFilterData(filterTypeRap);\n      return;\n    }\n\n    if (typeOfRap && autreFilter1 && !autreFilter) {\n      const filterTypeRap = data.filter(musique => musique.type_rap === typeOfRap && musique.nom_artiste === autreFilter1);\n      setFilterData(filterTypeRap);\n      return;\n    }\n\n    if (autreFilter1 && autreFilter && !typeOfRap) {\n      const filterTypeRap = data.filter(musique => musique.nom_artiste === autreFilter1 && musique.nom_scene === autreFilter);\n      setFilterData(filterTypeRap);\n      return;\n    }\n\n    if (autreFilter1 && autreFilter && typeOfRap) {\n      const filterTypeRap = data.filter(musique => musique.type_rap === typeOfRap && musique.nom_scene === autreFilter && musique.nom_artiste === autreFilter1);\n      setFilterData(filterTypeRap);\n      return;\n    }\n\n    if (typeOfRap || autreFilter || autreFilter1) {\n      const filterTypeRap = data.filter(musique => musique.nom_scene === autreFilter || musique.type_rap === typeOfRap || musique.nom_artiste === autreFilter1);\n      setFilterData(filterTypeRap);\n      return;\n    } // if(typeOfRap || autreFilter ){\n    //     const filterTypeRap = data.filter(musique => musique.nom_scene === autreFilter || musique.type_rap === typeOfRap)\n    //     setFilterData(filterTypeRap)\n    //     return\n    // }\n    // if(autreFilter || autreFilter1 ){\n    //     const filterTypeRap = data.filter(musique => musique.nom_scene === autreFilter || musique.nom_artiste === autreFilter1)\n    //     setFilterData(filterTypeRap)\n    //     return\n    // }\n    // if(typeOfRap || autreFilter1 ){\n    //     const filterTypeRap = data.filter(musique => musique.nom_artiste === autreFilter1 || musique.type_rap === typeOfRap )\n    //     setFilterData(filterTypeRap)\n    //     return\n    // }\n\n\n    setFilterData(data);\n    return;\n  }, [data, typeOfRap, autreFilter, autreFilter1]);\n  var result = filterData.length;\n\n  if (result < 1) {\n    result = \"Aucun résultat trouvé\";\n  } else if (result === 1) {\n    result = result + \" Resultat\";\n  } else {\n    result = result + \" Resultats\";\n  }\n\n  const [nom_scene, setNom_scene] = useState([]);\n  useEffect(() => {\n    const fetchNom_scene = async () => {\n      const result = await axios(\"/memory_admin/controller/distinc_select_api.php\");\n      setNom_scene(result.data);\n      console.log(\"updated\");\n    };\n\n    fetchNom_scene();\n    console.log(\"mounted\");\n  }, []);\n  const [nom_artiste, setNom_artiste] = useState([]);\n  useEffect(() => {\n    const fetchNom_artiste = async () => {\n      const result = await axios(\"/memory_admin/controller/distinc_select_api.php\");\n      setNom_artiste(result.data);\n      console.log(\"updated\");\n    };\n\n    fetchNom_artiste();\n    console.log(\"mounted\");\n  }, []);\n  const [type_rap, setType_rap] = useState([]);\n  useEffect(() => {\n    const fetchType_rap = async () => {\n      const result = await axios(\"/memory_admin/controller/distinc_select_api.php\");\n      setType_rap(result.data);\n      console.log(\"updated\");\n    };\n\n    fetchType_rap();\n    console.log(\"mounted\");\n  }, []); //   const handleClick = (key,e) => {  \n  //     e.preventDefault();    \n  //     console.log(key);  \n  //   }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"\",\n      value: typeOfRap,\n      onChange: e => {\n        const selectedFoodT = e.target.value;\n        console.log(typeOfRap);\n        setTypeOfRap(selectedFoodT);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--- Musique ---\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), nom_scene.filter(rien => rien.nom_scene).map((item, key) => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.nom_scene,\n          children: item.nom_scene\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"\",\n      value: autreFilter,\n      onChange: e => {\n        const selectedFood = e.target.value;\n        console.log(autreFilter);\n        setAutreFilter(selectedFood);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--- Sc\\xE8ne ---\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this), nom_scene.filter(rien => rien.nom_scene).map((item, key) => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.nom_scene,\n          children: item.nom_scene\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"\",\n      value: autreFilter1,\n      onChange: e => {\n        const selectedFoodTT = e.target.value;\n        setAutreFilter1(selectedFoodTT);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--- Artiste ---\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this), nom_scene.filter(rien => rien.nom_scene).map((item, key) => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.nom_scene,\n          children: item.nom_scene\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), filterData.map((item, key) =>\n    /*#__PURE__*/\n    // enlever le filter\n    _jsxDEV(\"div\", {\n      className: `template${key % 2}`,\n      children: [console.log(filterData.size), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template_grid_1\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img_template_grid\",\n          src: `data:image/png;base64, ${item.image_programme}`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template_grid_2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.nom_artiste\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.nom_scene\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.date_formatage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [item.heures_prog_debut, \" - \", item.heures_prog_fin]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Type_rap_prgm, \"jXHxkIG+GcX0V78gpWIe8nbt31g=\");\n\n_c = Type_rap_prgm;\nexport default Type_rap_prgm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Type_rap_prgm\");","map":{"version":3,"sources":["C:/wamp64/www/memory/src/Type_rap_prgm.js"],"names":["React","Fragment","useState","useEffect","axios","Type_rap_prgm","data","setData","typeOfRap","setTypeOfRap","filterData","setFilterData","autreFilter","setAutreFilter","autreFilter1","setAutreFilter1","fetchData","result","filterTypeRap","filter","musique","type_rap","nom_scene","nom_artiste","length","setNom_scene","fetchNom_scene","console","log","setNom_artiste","fetchNom_artiste","setType_rap","fetchType_rap","e","selectedFoodT","target","value","rien","map","item","key","selectedFood","selectedFoodTT","size","image_programme","date_formatage","heures_prog_debut","heures_prog_fin"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst Type_rap_prgm = () => {\r\n\r\n    \r\n\r\n  \r\n\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [typeOfRap, setTypeOfRap] = useState();\r\n    \r\n    const [filterData, setFilterData] = useState([]);\r\n\r\n    const [autreFilter, setAutreFilter] = useState();\r\n\r\n    const [autreFilter1, setAutreFilter1] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        \"/memory_admin/controller/programme/programme_api.php\",\r\n      );\r\n\r\n      setData(result.data);\r\n\r\n    };\r\n    fetchData();\r\n\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if(typeOfRap && autreFilter && !autreFilter1){\r\n        const filterTypeRap = data.filter(musique => musique.type_rap === typeOfRap && musique.nom_scene === autreFilter)\r\n        setFilterData(filterTypeRap)\r\n        return\r\n    }\r\n\r\n    if(typeOfRap && autreFilter1 && !autreFilter){\r\n        const filterTypeRap = data.filter(musique => musique.type_rap === typeOfRap && musique.nom_artiste === autreFilter1)\r\n        setFilterData(filterTypeRap)\r\n        return\r\n    }\r\n\r\n    if(autreFilter1 && autreFilter && !typeOfRap){\r\n        const filterTypeRap = data.filter(musique => musique.nom_artiste === autreFilter1 && musique.nom_scene === autreFilter)\r\n        setFilterData(filterTypeRap)\r\n        return\r\n    }\r\n\r\n    if(autreFilter1 && autreFilter &&  typeOfRap){\r\n        const filterTypeRap = data.filter(musique => musique.type_rap === typeOfRap && musique.nom_scene === autreFilter && musique.nom_artiste === autreFilter1 )\r\n        setFilterData(filterTypeRap)\r\n        return\r\n    }\r\n\r\n    if(typeOfRap || autreFilter || autreFilter1 ){\r\n\r\n        const filterTypeRap = data.filter(musique => musique.nom_scene === autreFilter || musique.type_rap === typeOfRap || musique.nom_artiste === autreFilter1)\r\n        setFilterData(filterTypeRap)\r\n        return\r\n    }\r\n\r\n    // if(typeOfRap || autreFilter ){\r\n\r\n    //     const filterTypeRap = data.filter(musique => musique.nom_scene === autreFilter || musique.type_rap === typeOfRap)\r\n    //     setFilterData(filterTypeRap)\r\n    //     return\r\n    // }\r\n\r\n    // if(autreFilter || autreFilter1 ){\r\n\r\n    //     const filterTypeRap = data.filter(musique => musique.nom_scene === autreFilter || musique.nom_artiste === autreFilter1)\r\n    //     setFilterData(filterTypeRap)\r\n    //     return\r\n    // }\r\n\r\n    // if(typeOfRap || autreFilter1 ){\r\n\r\n    //     const filterTypeRap = data.filter(musique => musique.nom_artiste === autreFilter1 || musique.type_rap === typeOfRap )\r\n    //     setFilterData(filterTypeRap)\r\n    //     return\r\n    // }\r\n\r\n    setFilterData(data)\r\n    return\r\n    \r\n  }, [data, typeOfRap, autreFilter, autreFilter1])\r\n\r\n\r\n  var result = filterData.length;\r\n\r\n    if(result < 1){\r\n        result = \"Aucun résultat trouvé\"    \r\n    }else if(result === 1){\r\n        result = result + \" Resultat\"    \r\n    }else{\r\n        result = result + \" Resultats\"    \r\n\r\n    }\r\n\r\n  const [nom_scene, setNom_scene] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchNom_scene = async () => {\r\n        const result = await axios(\r\n        \"/memory_admin/controller/distinc_select_api.php\",\r\n        );\r\n\r\n        setNom_scene(result.data);\r\n        console.log(\"updated\");\r\n        };\r\n        fetchNom_scene();\r\n        console.log(\"mounted\");\r\n\r\n    }, [])\r\n\r\n\r\n    const [nom_artiste, setNom_artiste] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchNom_artiste = async () => {\r\n        const result = await axios(\r\n        \"/memory_admin/controller/distinc_select_api.php\",\r\n        );\r\n\r\n        setNom_artiste(result.data);\r\n        console.log(\"updated\");\r\n        };\r\n        fetchNom_artiste();\r\n        console.log(\"mounted\");\r\n\r\n    }, [])\r\n\r\n\r\n    const [type_rap, setType_rap] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchType_rap = async () => {\r\n        const result = await axios(\r\n        \"/memory_admin/controller/distinc_select_api.php\",\r\n        );\r\n\r\n        setType_rap(result.data);\r\n        console.log(\"updated\");\r\n        };\r\n        fetchType_rap();\r\n        console.log(\"mounted\");\r\n\r\n    }, [])\r\n\r\n\r\n//   const handleClick = (key,e) => {  \r\n//     e.preventDefault();    \r\n//     console.log(key);  \r\n//   }\r\n\r\n  return (\r\n        <Fragment>\r\n            <select name=\"\" value={typeOfRap} onChange={(e) => {\r\n\r\n                const selectedFoodT = e.target.value ;\r\n                console.log(typeOfRap)\r\n\r\n                setTypeOfRap(selectedFoodT)\r\n\r\n\r\n            }}>\r\n\r\n                <option value=\"\">--- Musique ---</option>\r\n                {nom_scene.filter(rien => rien.nom_scene).map((item, key) => (\r\n                <Fragment key={key}>\r\n                    <option value={item.nom_scene}>{item.nom_scene}</option>\r\n            </Fragment>\r\n            ))}\r\n            \r\n            </select>\r\n\r\n\r\n\r\n            <select name=\"\" value={autreFilter} onChange={(e) => {\r\n\r\n            const selectedFood = e.target.value ;\r\n                console.log(autreFilter)\r\n            setAutreFilter(selectedFood)\r\n\r\n\r\n            }}>\r\n            <option value=\"\">--- Scène ---</option>\r\n            {nom_scene.filter(rien => rien.nom_scene).map((item, key) => (\r\n            <Fragment key={key}>\r\n            <option value={item.nom_scene}>{item.nom_scene}</option>\r\n            </Fragment>\r\n            ))}\r\n            \r\n            </select>\r\n            \r\n\r\n            <select name=\"\" value={autreFilter1} onChange={(e) => {\r\n\r\n            const selectedFoodTT = e.target.value ;\r\n                setAutreFilter1(selectedFoodTT)\r\n\r\n\r\n            }}>\r\n            <option value=\"\">--- Artiste ---</option>\r\n            {nom_scene.filter(rien => rien.nom_scene).map((item, key) => (\r\n\r\n            <Fragment key={key}>\r\n            <option value={item.nom_scene}>{item.nom_scene}</option>\r\n            </Fragment>\r\n            ))}\r\n\r\n            </select>\r\n\r\n\r\n\r\n\r\n            {/* {console.log(typeOfRap)} */}\r\n            {/* <div> ({result} == 1 ?  {result} Résultat : {result} Résultats) </div> */}\r\n            <div> {result}</div>\r\n\r\n            {filterData.map((item, key) => ( // enlever le filter\r\n                <div className={`template${key % 2}`} key={key}>\r\n                    \r\n                    {console.log(filterData.size)}\r\n                    <div className=\"template_grid_1\">\r\n                        <img className=\"img_template_grid\" src={`data:image/png;base64, ${item.image_programme}`} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"template_grid_2\">\r\n                        <div>{ item.nom_artiste }</div>\r\n                        <div>{ item.nom_scene }</div>\r\n                        <div>{ item.date_formatage }</div>\r\n                        <div>{ item.heures_prog_debut } - {item.heures_prog_fin}</div>\r\n                    </div>\r\n                </div> \r\n            ))}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Type_rap_prgm"]},"metadata":{},"sourceType":"module"}