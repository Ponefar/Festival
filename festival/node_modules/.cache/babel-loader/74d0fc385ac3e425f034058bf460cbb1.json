{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\festival\\\\src\\\\components\\\\programmation_en\\\\Type_rap_prgm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Type_rap_prgm = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [typeOfRap, setTypeOfRap] = useState();\n  const [filterData, setFilterData] = useState([]);\n  const [autreFilter, setAutreFilter] = useState();\n  const [autreFilter1, setAutreFilter1] = useState();\n  let wait = false;\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\"/memory_admin/controller/programme/programme_api.php\");\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (typeOfRap && autreFilter && !autreFilter1) {\n      const filterTypeRap = data.filter(musique => musique.type_rap === typeOfRap && musique.nom_scene === autreFilter);\n      setFilterData(filterTypeRap);\n      return;\n    }\n\n    if (typeOfRap && autreFilter1 && !autreFilter) {\n      const filterTypeRap = data.filter(musique => musique.type_rap === typeOfRap && musique.date_formatage_prgm_en === autreFilter1);\n      setFilterData(filterTypeRap);\n      return;\n    }\n\n    if (autreFilter1 && autreFilter && !typeOfRap) {\n      const filterTypeRap = data.filter(musique => musique.date_formatage_prgm_en === autreFilter1 && musique.nom_scene === autreFilter);\n      setFilterData(filterTypeRap);\n      return;\n    }\n\n    if (autreFilter1 && autreFilter && typeOfRap) {\n      const filterTypeRap = data.filter(musique => musique.type_rap === typeOfRap && musique.nom_scene === autreFilter && musique.date_formatage_prgm_en === autreFilter1);\n      setFilterData(filterTypeRap);\n      return;\n    }\n\n    if (typeOfRap || autreFilter || autreFilter1) {\n      const filterTypeRap = data.filter(musique => musique.nom_scene === autreFilter || musique.type_rap === typeOfRap || musique.date_formatage_prgm_en === autreFilter1);\n      setFilterData(filterTypeRap);\n      return;\n    } // if(typeOfRap || autreFilter ){\n    //     const filterTypeRap = data.filter(musique => musique.nom_scene === autreFilter || musique.type_rap === typeOfRap)\n    //     setFilterData(filterTypeRap)\n    //     return\n    // }\n    // if(autreFilter || autreFilter1 ){\n    //     const filterTypeRap = data.filter(musique => musique.nom_scene === autreFilter || musique.nom_artiste === autreFilter1)\n    //     setFilterData(filterTypeRap)\n    //     return\n    // }\n    // if(typeOfRap || autreFilter1 ){\n    //     const filterTypeRap = data.filter(musique => musique.nom_artiste === autreFilter1 || musique.type_rap === typeOfRap )\n    //     setFilterData(filterTypeRap)\n    //     return\n    // }\n\n\n    setFilterData(data);\n    return;\n  }, [data, typeOfRap, autreFilter, autreFilter1]);\n  var result = filterData.length;\n  const [nom_scene, setNom_scene] = useState([]);\n  useEffect(() => {\n    const fetchNom_scene = async () => {\n      const result = await axios(\"/memory_admin/controller/distinc_select_api.php\");\n      setNom_scene(result.data);\n      console.log(\"updated\");\n    };\n\n    fetchNom_scene();\n  }, []);\n  const [nom_artiste, setNom_artiste] = useState([]);\n  useEffect(() => {\n    const fetchNom_artiste = async () => {\n      const result = await axios(\"/memory_admin/controller/distinc_select_api.php\");\n      setNom_artiste(result.data);\n      console.log(\"updated\");\n    };\n\n    fetchNom_artiste();\n    console.log(\"mounted\");\n  }, []);\n  const [type_rap, setType_rap] = useState([]);\n  useEffect(() => {\n    const fetchType_rap = async () => {\n      const result = await axios(\"/memory_admin/controller/distinc_select_api.php\");\n      setType_rap(result.data);\n      console.log(\"updated\");\n    };\n\n    fetchType_rap();\n    console.log(\"mounted\");\n  }, []); //   const handleClick = (key,e) => {  \n  //     e.preventDefault();    \n  //     console.log(key);  \n  //   }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"\",\n      value: typeOfRap,\n      onChange: e => {\n        const selectedFoodT = e.target.value;\n        console.log(typeOfRap);\n        setTypeOfRap(selectedFoodT);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--- Music ---\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), type_rap.filter(rien => rien.type_rap).map((item, key) => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.type_rap,\n          children: item.type_rap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"\",\n      value: autreFilter,\n      onChange: e => {\n        const selectedFood = e.target.value;\n        console.log(autreFilter);\n        setAutreFilter(selectedFood);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--- Scene ---\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this), nom_scene.filter(rien => rien.nom_scene).map((item, key) => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.nom_scene,\n          children: item.nom_scene\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"\",\n      value: autreFilter1,\n      onChange: e => {\n        const selectedFoodTT = e.target.value;\n        setAutreFilter1(selectedFoodTT);\n        console.log(autreFilter1);\n        console.log(selectedFoodTT);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--- Dates ---\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), nom_artiste.filter(rien => rien.date_formatage).map((item, key) => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.date_formatage_prgm_en,\n          children: item.date_formatage_prgm_en\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), result > 0 ? result > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"result_prgm_green\",\n      children: [result, \" Results\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 45\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"result_prgm_green\",\n      children: [result, \" Results\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 98\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fausseHauteur\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"result_prgm_red\",\n        children: [\" Aucun r\\xE9sultat trouv\\xE9  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 234\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 241\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://data.photofunky.net/output/image/8/9/3/2/8932a4/photofunky.gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 247\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 184\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 153\n    }, this), filterData.map((item, key) =>\n    /*#__PURE__*/\n    // enlever le filter\n    _jsxDEV(\"div\", {\n      className: `template${key % 2}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template_grid_1\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img_template_grid\",\n          src: `data:image/png;base64, ${item.image_programme}`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template_grid_2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.nom_artiste\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.nom_scene\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.date_formatage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [item.heures_prog_debut, \" - \", item.heures_prog_fin]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Type_rap_prgm, \"jXHxkIG+GcX0V78gpWIe8nbt31g=\");\n\n_c = Type_rap_prgm;\nexport default Type_rap_prgm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Type_rap_prgm\");","map":{"version":3,"sources":["C:/wamp64/www/festival/src/components/programmation_en/Type_rap_prgm.js"],"names":["React","Fragment","useState","useEffect","axios","Type_rap_prgm","data","setData","typeOfRap","setTypeOfRap","filterData","setFilterData","autreFilter","setAutreFilter","autreFilter1","setAutreFilter1","wait","fetchData","result","filterTypeRap","filter","musique","type_rap","nom_scene","date_formatage_prgm_en","length","setNom_scene","fetchNom_scene","console","log","nom_artiste","setNom_artiste","fetchNom_artiste","setType_rap","fetchType_rap","e","selectedFoodT","target","value","rien","map","item","key","selectedFood","selectedFoodTT","date_formatage","image_programme","heures_prog_debut","heures_prog_fin"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst Type_rap_prgm = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [typeOfRap, setTypeOfRap] = useState();\r\n    \r\n    const [filterData, setFilterData] = useState([]);\r\n\r\n    const [autreFilter, setAutreFilter] = useState();\r\n\r\n    const [autreFilter1, setAutreFilter1] = useState();\r\n\r\n    let wait = false;\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        \"/memory_admin/controller/programme/programme_api.php\",\r\n      );\r\n\r\n      setData(result.data);\r\n\r\n    };\r\n    fetchData();\r\n    \r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if(typeOfRap && autreFilter && !autreFilter1){\r\n        const filterTypeRap = data.filter(musique => musique.type_rap === typeOfRap && musique.nom_scene === autreFilter)\r\n        setFilterData(filterTypeRap)\r\n        return\r\n    }\r\n\r\n    if(typeOfRap && autreFilter1 && !autreFilter){\r\n        const filterTypeRap = data.filter(musique => musique.type_rap === typeOfRap && musique.date_formatage_prgm_en === autreFilter1)\r\n        setFilterData(filterTypeRap)\r\n        return\r\n    }\r\n\r\n    if(autreFilter1 && autreFilter && !typeOfRap){\r\n        const filterTypeRap = data.filter(musique => musique.date_formatage_prgm_en === autreFilter1 && musique.nom_scene === autreFilter)\r\n        setFilterData(filterTypeRap)\r\n        return\r\n    }\r\n\r\n    if(autreFilter1 && autreFilter &&  typeOfRap){\r\n        const filterTypeRap = data.filter(musique => musique.type_rap === typeOfRap && musique.nom_scene === autreFilter && musique.date_formatage_prgm_en === autreFilter1 )\r\n        setFilterData(filterTypeRap)\r\n        return\r\n    }\r\n\r\n    if(typeOfRap || autreFilter || autreFilter1 ){\r\n\r\n        const filterTypeRap = data.filter(musique => musique.nom_scene === autreFilter || musique.type_rap === typeOfRap || musique.date_formatage_prgm_en === autreFilter1)\r\n        setFilterData(filterTypeRap)\r\n        return\r\n    }\r\n\r\n    // if(typeOfRap || autreFilter ){\r\n\r\n    //     const filterTypeRap = data.filter(musique => musique.nom_scene === autreFilter || musique.type_rap === typeOfRap)\r\n    //     setFilterData(filterTypeRap)\r\n    //     return\r\n    // }\r\n\r\n    // if(autreFilter || autreFilter1 ){\r\n\r\n    //     const filterTypeRap = data.filter(musique => musique.nom_scene === autreFilter || musique.nom_artiste === autreFilter1)\r\n    //     setFilterData(filterTypeRap)\r\n    //     return\r\n    // }\r\n\r\n    // if(typeOfRap || autreFilter1 ){\r\n\r\n    //     const filterTypeRap = data.filter(musique => musique.nom_artiste === autreFilter1 || musique.type_rap === typeOfRap )\r\n    //     setFilterData(filterTypeRap)\r\n    //     return\r\n    // }\r\n\r\n    setFilterData(data)\r\n\r\n    return\r\n    \r\n  }, [data, typeOfRap, autreFilter, autreFilter1])\r\n\r\n\r\n  var result = filterData.length;\r\n\r\n  const [nom_scene, setNom_scene] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchNom_scene = async () => {\r\n        const result = await axios(\r\n        \"/memory_admin/controller/distinc_select_api.php\",\r\n        );\r\n\r\n        setNom_scene(result.data);\r\n        console.log(\"updated\");\r\n        };\r\n        fetchNom_scene();\r\n\r\n    }, [])\r\n\r\n\r\n    const [nom_artiste, setNom_artiste] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchNom_artiste = async () => {\r\n        const result = await axios(\r\n        \"/memory_admin/controller/distinc_select_api.php\",\r\n        );\r\n\r\n        setNom_artiste(result.data);\r\n        console.log(\"updated\");\r\n        };\r\n        fetchNom_artiste();\r\n        console.log(\"mounted\");\r\n\r\n    }, [])\r\n\r\n\r\n    const [type_rap, setType_rap] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchType_rap = async () => {\r\n        const result = await axios(\r\n        \"/memory_admin/controller/distinc_select_api.php\",\r\n        );\r\n\r\n        setType_rap(result.data);\r\n        console.log(\"updated\");\r\n        };\r\n        fetchType_rap();\r\n        console.log(\"mounted\");\r\n\r\n    }, [])\r\n\r\n\r\n//   const handleClick = (key,e) => {  \r\n//     e.preventDefault();    \r\n//     console.log(key);  \r\n//   }\r\n\r\n  return (\r\n        <Fragment>\r\n            <select name=\"\" value={typeOfRap} onChange={(e) => {\r\n\r\n                const selectedFoodT = e.target.value ;\r\n                console.log(typeOfRap)\r\n\r\n                setTypeOfRap(selectedFoodT)\r\n            }}>\r\n                <option value=\"\">--- Music ---</option>\r\n                {type_rap.filter(rien => rien.type_rap).map((item, key) => (\r\n                <Fragment key={key}>\r\n                    <option value={item.type_rap}>{item.type_rap}</option>\r\n                </Fragment>\r\n                ))}\r\n            \r\n            </select>\r\n\r\n\r\n\r\n            <select name=\"\" value={autreFilter} onChange={(e) => {\r\n\r\n            const selectedFood = e.target.value ;\r\n                console.log(autreFilter)\r\n            setAutreFilter(selectedFood)\r\n\r\n\r\n            }}>\r\n            <option value=\"\">--- Scene ---</option>\r\n            {nom_scene.filter(rien => rien.nom_scene).map((item, key) => (\r\n            <Fragment key={key}>\r\n            <option value={item.nom_scene}>{item.nom_scene}</option>\r\n            </Fragment>\r\n            ))}\r\n            \r\n            </select>\r\n            \r\n\r\n            <select name=\"\" value={autreFilter1} onChange={(e) => {\r\n\r\n            const selectedFoodTT = e.target.value ;\r\n\r\n                setAutreFilter1(selectedFoodTT)\r\n                console.log(autreFilter1)\r\n                console.log(selectedFoodTT)\r\n\r\n\r\n            }}>\r\n            <option value=\"\">--- Dates ---</option>\r\n            {nom_artiste.filter(rien => rien.date_formatage).map((item, key) => (\r\n            <Fragment key={key}>\r\n            <option value={item.date_formatage_prgm_en}>{item.date_formatage_prgm_en}</option>\r\n            </Fragment>\r\n            ))}\r\n\r\n            </select>\r\n\r\n\r\n\r\n            {/* setData(result.data);\r\n\r\n};\r\nfetchData(); */}\r\n\r\n            {/* {console.log(typeOfRap)} */}\r\n            {/* <div> ({result} == 1 ?  {result} Résultat : {result} Résultats) </div> */}\r\n                {result > 0 ? (result > 1 ? <div id=\"result_prgm_green\">{result} Results</div> : <div id=\"result_prgm_green\">{result} Results</div>)  : <div className=\"fausseHauteur\"><div id=\"result_prgm_red\"> Aucun résultat trouvé  <br /> <br /><img src=\"https://data.photofunky.net/output/image/8/9/3/2/8932a4/photofunky.gif\" /> </div></div>}\r\n\r\n            {filterData.map((item, key) => ( // enlever le filter\r\n                <div className={`template${key % 2}`} key={key}>\r\n                    \r\n                    {/* {console.log(filterData.size)} */}\r\n                     <div className=\"template_grid_1\">\r\n                       <img className=\"img_template_grid\" src={`data:image/png;base64, ${item.image_programme}`} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"template_grid_2\">\r\n                        <div>{ item.nom_artiste }</div>\r\n                        <div>{ item.nom_scene }</div>\r\n                        <div>{ item.date_formatage }</div>\r\n                        <div>{ item.heures_prog_debut } - {item.heures_prog_fin}</div>\r\n                    </div>\r\n                </div> \r\n            ))}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Type_rap_prgm"]},"metadata":{},"sourceType":"module"}